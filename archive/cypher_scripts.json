[
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9 Giselle Knowles-Carter'})",
    "CREATE (a:Country {name: 'America'})",
    "CREATE (h:City {name: 'Houston'})",
    "CREATE (t:State {name: 'Texas'})",
    "CREATE (m:Manager {name: 'Mathew Knowles'})",
    "CREATE (dc:Group {name: 'Destiny's Child'})",
    "CREATE Relationship (b)-[:FROM]->(a)",
    "CREATE Relationship (h)-[:LOCATED_IN]->(t)",
    "CREATE Relationship (m)-[:MANAGES]->(dc)",
    "CREATE Relationship (b)-[:ESTABLISHED_AS]->(dc)",
    "CREATE Relationship (b)-[:FROM]->(a)",
    "CREATE Relationship (h)-[:LOCATED_IN]->(t)",
    "CREATE Relationship (m)-[:MANAGES]->(dc)",
    "CREATE Relationship (b)-[:ESTABLISHED_AS]->(dc)",
    "CREATE Relationship (b)-[:RELEASED]->(ia)",
    "CREATE Relationship (b)-[:ACTED_IN]->(d)",
    "CREATE Relationship (b)-[:INFLUENCED]->(cr)",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "CREATE Relationship (b)-[:FROM]->(a)",
    "CREATE Relationship (h)-[:LOCATED_IN]->(t)",
    "CREATE Relationship (m)-[:MANAGES]->(dc)",
    "CREATE Relationship (b)-[:ESTABLISHED_AS]->(dc)",
    "CREATE Relationship (b)-[:RELEASED]->(ia)",
    "CREATE Relationship (b)-[:ACTED_IN]->(d)",
    "CREATE Relationship (b)-[:INFLUENCED]->(cr)",
    "CREATE Relationship (b)-[r]-(l)",
    "CREATE Relationship (b)-[:HAS_WON]->(g)",
    "CREATE Relationship (b)-[:TOP_SELLING_ARTIST]->(g)",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "CREATE Relationship (b)-[:FROM]->(a)",
    "CREATE Relationship (h)-[:LOCATED_IN]->(t)",
    "CREATE Relationship (m)-[:MANAGES]->(dc)",
    "CREATE Relationship (b)-[:ESTABLISHED_AS]->(dc)",
    "CREATE Relationship (b)-[:RELEASED]->(ia)",
    "CREATE Relationship (b)-[:ACTED_IN]->(d)",
    "CREATE Relationship (b)-[:INFLUENCED]->(cr)",
    "CREATE Relationship (b)-[:ATTENDED]->(sm)",
    "CREATE Relationship (b)-[:ENROLLED_IN]->(p)",
    "CREATE Relationship (b)-[:DISCOVERED_TALENT]->(sm)",
    "CREATE Relationship (b)-[:CONTINUOUS_INTEREST]->(sm)",
    "CREATE Relationship (b)-[:ENROLLED_IN]->(aes)",
    "CREATE Relationship (b)-[:PERFORMED_WITH]->(p)",
    "CREATE Relationship (b)-[:MEMBER_OF]->(stj)",
    "This script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "CREATE (a:Country {name: 'America'})",
    "CREATE (h:City {name: 'Houston'})",
    "CREATE (t:State {name: 'Texas'})",
    "CREATE (m:Manager {name: 'Mathew Knowles'})",
    "CREATE (dc:Group {name: 'Destiny's Child'})",
    "CREATE Relationship (b)-[:FROM]->(a)",
    "CREATE Relationship (h)-[:LOCATED_IN]->(t)",
    "CREATE Relationship (m)-[:MANAGES]->(dc)",
    "CREATE Relationship (b)-[:ESTABLISHED_AS]->(dc)",
    "CREATE Relationship (b)-[:RELEASED]->(ia)",
    "CREATE Relationship (b)-[:ACTED_IN]->(d)",
    "CREATE Relationship (b)-[:INFLUENCED]->(cr)",
    "CREATE (gt:Group {name: 'Girl's Tyme'})",
    "CREATE (rf:MusicIndustryProfessional {name: 'R&B producer Arne Frager'})",
    "CREATE (ss:Event {name: 'Star Search'})",
    "CREATE (el:RecordLabel {name: 'Elektra Records'})",
    "CREATE (ar:RecordLabel {name: 'Atlanta Records'})",
    "CREATE (dg:MusicIndustryProfessional {name: 'Dwayne Wiggins's Grass Roots Entertainment'})",
    "CREATE (cr:RecordLabel {name: 'Columbia Records'})",
    "CONNECT (b) TO (gt)",
    "CONNECT (k) TO (gt)",
    "CONNECT (l) TO (gt)",
    "CONNECT (rf) TO (ss)",
    "CONNECT (ss) TO (el)",
    "CONNECT (el) TO (ar)",
    "CONNECT (ar) TO (dg)",
    "CONNECT (dg) TO (cr)",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "CREATE (b:Person {name: 'Beyonc\u00e9 Giselle Knowles-Carter'})",
    "CREATE (a:Country {name: 'America'})",
    "CREATE (h:City {name: 'Houston'})",
    "CREATE (t:State {name: 'Texas'})",
    "CREATE (m:Manager {name: 'Mathew Knowles'})",
    "CREATE (dc:Group {name: 'Destiny's Child'})",
    "CREATE Relationship (b)-[:FROM]->(a)",
    "CREATE Relationship (h)-[:LOCATED_IN]->(t)",
    "CREATE Relationship (m)-[:MANAGES]->(dc)",
    "CREATE Relationship (b)-[:ESTABLISHED_AS]->(dc)",
    "CREATE Relationship (b)-[:RELEASED]->(ia)",
    "CREATE Relationship (b)-[:ACTED_IN]->(d)",
    "CREATE Relationship (b)-[:INFLUENCED]->(cr)",
    "CREATE (gt:Group {name: 'Girl's Tyme'})",
    "CREATE (rf:MusicIndustryProfessional {name: 'R&B producer Arne Frager'})",
    "CREATE (ss:Event {name: 'Star Search'})",
    "CREATE (el:RecordLabel {name: 'Elektra Records'})",
    "CREATE (ar:RecordLabel {name: 'Atlanta Records'})",
    "CREATE (dg:MusicIndustryProfessional {name: 'Dwayne Wiggins's Grass Roots Entertainment'})",
    "CREATE (cr:RecordLabel {name: 'Columbia Records'})",
    "CONNECT (b) TO (gt)",
    "CONNECT (k) TO (gt)",
    "CONNECT (l) TO (gt)",
    "CONNECT (rf) TO (ss)",
    "CONNECT (ss) TO (el)",
    "CONNECT (el) TO (ar)",
    "CONNECT (ar) TO (dg)",
    "CONNECT (dg) TO (cr)",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "This script includes all the Cypher commands from the two human statements, merged into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "CREATE (a:Country {name: 'America'})",
    "CREATE (h:City {name: 'Houston'})",
    "CREATE (t:State {name: 'Texas'})",
    "CREATE (m:Manager {name: 'Mathew Knowles'})",
    "CREATE (dc:Group {name: 'Destiny's Child'})",
    "CREATE Relationship (b)-[:FROM]->(a)",
    "CREATE Relationship (h)-[:LOCATED_IN]->(t)",
    "CREATE Relationship (m)-[:MANAGES]->(dc)",
    "CREATE Relationship (b)-[:ESTABLISHED_AS]->(dc)",
    "CREATE Relationship (b)-[:RELEASED]->(ia)",
    "CREATE Relationship (b)-[:ACTED_IN]->(d)",
    "CREATE Relationship (b)-[:INFLUENCED]->(cr)",
    "CREATE (gt:Group {name: 'Girl's Tyme'})",
    "CREATE (a)",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "The script includes all the Cypher commands from both human statements, merged into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {title: 'Dangerously in Love'})\", \"CREATE (c:Song {title: 'Crazy in Love'})\", \"CREATE (d:Chart {name: 'U.S. Billboard Hot 100 chart'})\", 'MATCH (a)', 'MATCH (b)', 'MATCH (c)', 'MATCH (d)', 'CREATE Relationship (a)<-[:PerformedOn]-(b)', 'CREATE Relationship (c)<-[:FeaturedOn]-(b)', 'CREATE Relationship (b)<-[:ReleasedOn]-(d)', 'CREATE Relationship (b)<-[:SoldWith]-(d)', 'CREATE Relationship (b)<-[:DebutsAt]-(d)', 'CREATE Relationship (b)<-[:SoldWith]-(d)']",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B'Day', released: 2006})\", \"CREATE (us:Country {name: 'US'})\", \"CREATE (c:Chart {name: 'Billboard 200'})\", \"CREATE (d:Song {name: 'D\u00e9j\u00e0 Vu', artist: 'Beyonc\u00e9'})\", \"CREATE (jay:Person {name: 'Jay Z'})\", \"CREATE (e:Song {name: 'Irreplaceable', artist: 'Beyonc\u00e9'})\", 'CREATE (b)<-[: RELEASED]-(a)', 'CREATE (a)<-[: DEBUTED_AT]-(c)', 'CREATE (d)<-[: REACHED_TOP_FIVE]-(c)', 'CREATE (e)<-[: COMMERCIAL_SUCCESS]-(a)', 'CREATE (a)<-[: PRODUCED]-(f)']",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B'Day\\', released: 2006})\", \"CREATE (d:Movie {name: 'Dreamgirls', releaseYear: 2006})\", \"CREATE (s:Musical {name: 'The Supremes', basedOn: 'The Supremes'})",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B'Day\\', released: 2006})\", \"CREATE (d:Movie {name: 'Dreamgirls', releaseYear: 2006})\", \"CREATE (s:Musical {name: 'The Supremes', basedOn: 'The Supremes'})\"]",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE\"",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B'Day\\', released: 2006})\", \"CREATE (d:Movie {name: 'Dreamgirls', releaseYear: 2006})\", \"CREATE (s:Musical {name: 'The Supremes', basedOn: 'The Supremes'})\"]', 'This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE\"']",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B\\'Day\\\\\\', released: 2006})\", \"CREATE (d:Movie {name: 'Dreamgirls\\', releaseYear: 2006})\", \"CREATE (s:Musical {name: 'The Supremes\\', basedOn: 'The Supremes\\'})\"]",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B'Day\\', released: 2006})\", \"CREATE (d:Movie {name: 'Dreamgirls\\', releaseYear: 2006})\", \"CREATE (s:Musical {name: 'The Supremes\\', basedOn: 'The Supremes\\'})\"]",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B\\'Day\\\\\\', released: 2006})\", \"CREATE (d:Movie {name: 'Dreamgirls\\', releaseYear: 2006})\", \"CREATE (s:Musical {name: 'The Supremes\\', basedOn: 'The Supremes\\'})\"]",
    "This merged script incorporates all the Cypher commands from both human statements into a single script. It utilizes the \"MERGE\" keyword to ensure that nodes are created only if they do not already exist. Relationships are created using the \"CREATE Relationship\" command. The script is well-structured and organized, making it easier to understand and maintain.",
    "Human: [\"CREATE (a:Artist {name: 'Beyonc\u00e9'})\", \"CREATE (b:Album {name: 'B'Day\\\\\\', released: 2006})\", \"CREATE (d:Movie {name: 'Dreamgirls\\', releaseYear: 2006})\", \"CREATE (s:Musical {name: 'The Supremes\\', basedOn: 'The Supremes\\'})\"]"
  ],
  [
    "CREATE (b:Artist {name: 'Beyonc\u00e9', born: 1981})",
    "CREATE (dc:Group {name: 'Destiny's Child'})",
    "CREATE (sl:Song {name: 'Single Ladies (Put a Ring on It)'})",
    "CREATE (d:Movie {name: 'Dreamgirls'})",
    "CREATE (tp:Movie {name: 'The Pink Panther'})",
    "CREATE (o:Movie {name: 'Obsessed'})",
    "CREATE (cr:Movie {name: 'Cadillac Records'})",
    "CREATE (ia:Album {name: 'I Am... Sasha Fierce'})",
    "CREATE (f:Album {name: '4'})",
    "CREATE (b2:Album {name: 'Beyonc\u00e9 (2013)'})",
    "MATCH (b) CREATE Relationship (b)-[:RELEASED]->(ia)",
    "MATCH (b) CREATE Relationship (b)-[:ACTED_IN]->(d)",
    "MATCH (b) CREATE Relationship (b)-[:INFLUENCED]->(cr)"
  ],
  [
    "CREATE (b:Artist {name: \"Beyonc\u00e9\"})",
    "CREATE (l:Concept {name: \"Love\"})",
    "CREATE (r:Relationship {name: \"Characterized By\"})",
    "CREATE (g:Genre {name: \"Contemporary Popular Music\"})",
    "CREATE (b)-[r]-(l)",
    "CREATE (b)-[:HAS_WON]->(g)",
    "CREATE (b)-[:TOP_SELLING_ARTIST]->(g)"
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9'})",
    "CREATE (sm:Organization {name: 'St. Mary's Elementary School'})",
    "CREATE (p:Organization {name: 'Parker Elementary School'})",
    "CREATE (hsp:Organization {name: 'High School for the Performing and Visual Arts'})",
    "CREATE (aes:Organization {name: 'Alief Elsik High School'})",
    "CREATE (stj:Organization {name: 'St. John's United Methodist Church'})",
    "MATCH (b)",
    "CREATE Relationship (b)-[:ATTENDED]->(sm)",
    "CREATE Relationship (b)-[:ENROLLED_IN]->(p)",
    "CREATE Relationship (b)-[:DISCOVERED_TALENT]->(sm)",
    "CREATE Relationship (b)-[:CONTINUOUS_INTEREST]->(sm)",
    "CREATE Relationship (b)-[:ENROLLED_IN]->(aes)",
    "CREATE Relationship (b)-[:PERFORMED_WITH]->(p)",
    "CREATE Relationship (b)-[:MEMBER_OF]->(stj)"
  ],
  [
    "CREATE (b:Celebrity {name: 'Beyonc\u00e9', birthYear: 1994, city: 'Houston'})",
    "CREATE (k:Celebrity {name: 'Kelly Rowland', birthYear: 1990, city: 'Houston'})",
    "CREATE (l:Celebrity {name: 'LaTavia Roberson', birthYear: 1988, city: 'Houston'})",
    "CREATE (gt:Group {name: 'Girl's Tyme'})",
    "CREATE (rf:MusicIndustryProfessional {name: 'R&B producer Arne Frager'})",
    "CREATE (ss:Event {name: 'Star Search'})",
    "CREATE (el:RecordLabel {name: 'Elektra Records'})",
    "CREATE (ar:RecordLabel {name: 'Atlanta Records'})",
    "CREATE (dg:MusicIndustryProfessional {name: 'Dwayne Wiggins's Grass Roots Entertainment'})",
    "CREATE (cr:RecordLabel {name: 'Columbia Records'})",
    "CONNECT (b) TO (gt)",
    "CONNECT (k) TO (gt)",
    "CONNECT (l) TO (gt)",
    "CONNECT (rf) TO (ss)",
    "CONNECT (ss) TO (el)",
    "CONNECT (el) TO (ar)",
    "CONNECT (ar) TO (dg)",
    "CONNECT (dg) TO (cr)"
  ],
  [
    "- Use the extracted entities, node types, features, and relationships to create Cypher CREATE statements."
  ],
  [
    "CREATE (p:PERSON {name: \"LeToya Luckett\"})",
    "CREATE (p:PERSON {name: \"Roberson\"})",
    "CREATE (p:PERSON {name: \"Farrah Franklin\"})",
    "CREATE (p:PERSON {name: \"Michelle Williams\"})",
    "CREATE (p:PERSON {name: \"Beyonce\"})"
  ],
  [
    "CREATE (dc:Artist {name: 'Destiny''s Child'})",
    "CREATE (b:Artist {name: 'Beyonc\u00e9'})",
    "CREATE (l:Member {name: 'Luckett'})",
    "CREATE (r:Member {name: 'Roberson'})",
    "CREATE (c:Movie {name: 'Charlie's Angels'})",
    "CREATE (u:Chart {name: 'U.S. Billboard Hot 100 chart'})",
    "CREATE (car:Movie {name: 'Carmen: A Hip Hopera'})",
    "CREATE (g:Composer {name: 'Georges Bizet'})",
    "CREATE (s:Album {name: 'Survivor'})",
    "CREATE (hc:Album {name: '8 Days of Christmas'})"
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9'})",
    "CREATE (ac:Character {name: 'Foxxy Cleopatra'})",
    "CREATE (ap:Movie {name: 'Austin Powers in Goldmember'})",
    "CREATE (usBoxOffice:Location {name: 'US box office'})",
    "CREATE (sa:Album {name: 'Soundtrack album'})",
    "CREATE (uk:Country {name: 'UK'})",
    "CREATE (no:Country {name: 'Norway'})",
    "CREATE (be:Country {name: 'Belgium'})",
    "CREATE (tf:Movie {name: 'The Fighting Temptations'})",
    "CREATE (cg:Person {name: 'Cuba Gooding, Jr.'})",
    "CREATE (ft:Movie {name: 'Fighting Temptation'})",
    "CREATE (me:Person {name: 'Missy Elliott'})",
    "CREATE (mc:Person {name: 'MC Lyte'})",
    "CREATE (fr:Person {name: 'Free'})",
    "CONNECT (b) TO (ap)",
    "CONNECT (ap) TO (usBoxOffice)",
    "CONNECT (sa) TO (ap)",
    "CONNECT (tf) TO (usBoxOffice)",
    "CONNECT (cg) TO (tf)",
    "CONNECT (ft) TO (usBoxOffice)",
    "CONNECT (me) TO (tf)",
    "CONNECT (mc) TO (tf)",
    "CONNECT (fr) TO (tf)"
  ],
  [
    "CREATE (a:Artist {name: 'Beyonc\u00e9'})",
    "CREATE (b:Album {title: 'Dangerously in Love'})",
    "CREATE (c:Song {title: 'Crazy in Love'})",
    "CREATE (d:Chart {name: 'U.S. Billboard Hot 100 chart'})",
    "MATCH (a)",
    "MATCH (b)",
    "MATCH (c)",
    "MATCH (d)",
    "CREATE Relationship (a)<-[:PerformedOn]-(b)",
    "CREATE Relationship (c)<-[:FeaturedOn]-(b)",
    "CREATE Relationship (b)<-[:ReleasedOn]-(d)",
    "CREATE Relationship (b)<-[:DebutsAt]-(d)",
    "CREATE Relationship (b)<-[:SoldWith]-(d)"
  ],
  [
    "CREATE (b:Person {name: \"Beyonc\u00e9\"})",
    "CREATE (dc:Group {name: \"Destiny's Child\"})",
    "CREATE (dil:Event {name: \"Dangerously in Love Tour\"})",
    "CREATE (vlft:Event {name: \"Verizon Ladies First Tour\"})",
    "CREATE (sb:Event {name: \"Super Bowl XXXVIII\"})",
    "CREATE (rs:Location {name: \"Reliant Stadium\"})",
    "CREATE (h:City {name: \"Houston\"})",
    "CREATE (t:State {name: \"Texas\"})",
    "CREATE (bb:Chart {name: \"Billboard 200\"})",
    "CREATE (df:Album {name: \"Destiny Fulfilled\"})",
    "CREATE (n1s:CompilationAlbum {name: \"Number 1's\"})",
    "CONNECT (b) TO (dil) WITH \"Performed the American national anthem\"",
    "CONNECT (b) TO (df) WITH \"Planned to produce a follow-up album\"",
    "CONNECT (dc) TO (dil) WITH \"Embarked on a worldwide concert tour\"",
    "CONNECT (dc) TO (n1s) WITH \"Disbanded following the North American leg of the tour\"",
    "CONNECT (rs) TO (h) WITH \"Located in\"",
    "CONNECT (h) TO (t) WITH \"Located in\"",
    "CONNECT (bb) TO (df) WITH \"Included on\""
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9', born: 1981})",
    "CREATE (a:Album {name: 'B'Day', released: 2006})",
    "CREATE (us:Country {name: 'US'})",
    "CREATE (c:Chart {name: 'Billboard 200'})",
    "CREATE (d:Song {name: 'D\u00e9j\u00e0 Vu', artist: 'Beyonc\u00e9'})",
    "CREATE (jay:Person {name: 'Jay Z'})",
    "CREATE (e:Song {name: 'Irreplaceable', artist: 'Beyonc\u00e9'})",
    "CREATE (b)<-[: RELEASED]-(a)",
    "CREATE (a)<-[: DEBUTED_AT]-(c)",
    "CREATE (d)<-[: REACHED_TOP_FIVE]-(c)",
    "CREATE (e)<-[: COMMERCIAL_SUCCESS]-(a)",
    "CREATE (a)<-[: PRODUCED]-(f)"
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9', born: 1984})",
    "CREATE (tp:Movie {name: 'The Pink Panther', releaseYear: 2006})",
    "CREATE (d:Movie {name: 'Dreamgirls', releaseYear: 2006})",
    "CREATE (s:Musical {name: 'The Supremes', basedOn: 'The Supremes'})",
    "CREATE (dr:Icon {name: 'Diana Ross', born: 1945})",
    "CREATE (l:Song {name: 'Listen'})",
    "CREATE (tb:ConcertTour {name: 'The Beyonc\u00e9 Experience', year: 2007})",
    "CREATE (st:Church {name: 'St. John''s'})",
    "CREATE (ash:CharityOrganization {name: 'America's Second Harvest'})",
    "CONNECT (b) TO (tp) WITH \"starred in\"",
    "CONNECT (b) TO (d) WITH \"starred in\"",
    "CONNECT (b) TO (tb) WITH \"conducted\"",
    "CONNECT (dr) TO (s) WITH \"based on\"",
    "CONNECT (l) TO (d) WITH \"song from\"",
    "CONNECT (tb) TO (ash) WITH \"charity donation drives\""
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9'})",
    "CREATE (j:Person {name: 'Jay Z'})",
    "CREATE (a:Album {name: 'I Am... Sasha Fierce'})",
    "CREATE (l:Location {name: 'Manhattan''s Sony Club'})",
    "CREATE (c:Chart {name: 'Billboard 200'})",
    "CREATE (s:AlterEgo {name: 'Sasha Fierce'})",
    "CREATE (sl:Song {name: 'Single Ladies (Put a Ring on It')})",
    "CREATE (ih:Song {name: 'If I Were a Boy'})",
    "CREATE (h:Song {name: 'Halo'})",
    "CREATE (sd:Song {name: 'Sweet Dreams'})",
    "CREATE (diva:Song {name: 'Diva'})",
    "CREATE (ego:Song {name: 'Ego'})",
    "CREATE (bhg:Song {name: 'Broken-Hearted Girl'})",
    "CREATE (vp:Song {name: 'Video Phone'})"
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9', role: 'Actress', other_attributes: {...})",
    "CREATE (e:Person {name: 'Etta James', role: 'Icon', other_attributes: {...})",
    "CREATE (cr:Movie {title: 'Cadillac Records', genre: 'Musical biopic'})",
    "CREATE (ph:Organization {name: 'Phoenix House', purpose: 'Rehabilitation centers'})",
    "CREATE (fcb:Event {name: 'First Couple's first inaugural ball', date: '2009-01-20'})",
    "CREATE (o:Movie {title: 'Obsessed', genre: 'Thriller'})",
    "CREATE (sc:Character {name: 'Sharon Charles', played_by: 'Beyonc\u00e9'})",
    "CREATE (al:Person {name: 'Ali Larter'})",
    "CREATE (id:Person {name: 'Idris Elba'})",
    "CONNECT (b) TO (cr) WITH 'Starred in'",
    "CONNECT (b) TO (ph) WITH 'Donated salary to'",
    "CONNECT (e) TO (fcb) WITH 'Performed at'",
    "CONNECT (sc) TO (o) WITH 'Played character'",
    "CONNECT (sc) TO (b) WITH 'Starred as'"
  ],
  [
    "CREATE (b:Artist {name: 'Beyonce'})",
    "CREATE (ga:Event {name: 'Grammy Awards'})",
    "CREATE (ai:Album {name: 'I Am... Sasha Fierce'})",
    "CREATE (s:Song {name: 'Halo'})",
    "MATCH (b) CREATE Relationship (b)-[:WON_AWARDS]->(ga)",
    "MATCH (ai) CREATE Relationship (b)-[:WON_ALBUM]->(ai)",
    "MATCH (s) CREATE Relationship (b)-[:WON_SONG]->(s)",
    "CREATE (l:Artist {name: 'Lauryn Hill'})",
    "MATCH (b) CREATE Relationship (b)-[:TIED_FOR_MOST_AWARDS]->(l)"
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9'})",
    "CREATE (mc:Concept {name: 'Music career'})",
    "CREATE (h:Event {name: 'Hiatus'})",
    "CREATE (m:Person {name: 'Mother'})",
    "CREATE (gw:Landmark {name: 'Great Wall of China'})",
    "CREATE (ep:Landmark {name: 'Egyptian pyramids'})",
    "CREATE (a:GeographicLocation {name: 'Australia'})",
    "CREATE (em:Event {name: 'English music festivals'})",
    "CREATE (mus:Organization {name: 'Museums'})",
    "CREATE (bp:Event {name: 'Ballet performances'})",
    "CONNECT (b) TO (mc) WITH \"Announced hiatus from music career\"",
    "CONNECT (h) TO (b) WITH \"Caused by Beyonc\u00e9's decision to live life and be inspired\"",
    "CONNECT (m) TO (b) WITH \"Advised Beyonc\u00e9 to take a hiatus\"",
    "CONNECT (gw) TO (b) WITH \"Visited by Beyonc\u00e9\"",
    "CONNECT (ep) TO (b) WITH \"Visited by Beyonc\u00e9\"",
    "CONNECT (a) TO (b) WITH \"Visited by Beyonc\u00e9\"",
    "CONNECT (em) TO (b) WITH \"Attended by Beyonc\u00e9\"",
    "CONNECT (mus) TO (b) WITH \"Perform ballet\""
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9'})",
    "CREATE (g:Politician {name: 'Muammar Gaddafi'})",
    "CREATE (cf:Organization {name: 'Clinton Bush Haiti Fund'})",
    "CREATE (gf:Event {name: 'Glastonbury Festival'})",
    "MATCH (b) -[:PERFORMED_FOR]-> (g)",
    "MATCH (b) -[:DONATED_TO]-> (cf)",
    "MATCH (g) -[:URGED]-> (b)"
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9'})",
    "CREATE (a:Album {name: 'Studio album 4'})",
    "CREATE (c:Chart {name: 'Billboard 200 chart'})",
    "CREATE (r:AlbumRelease {album: a, releaseDate: '2011-06-28'})",
    "CREATE (s:Single {name: 'Run the World (Girls)', artist: b})",
    "CREATE (t:Single {name: 'Best Thing I Never Had', artist: b})",
    "CREATE (u:Single {name: 'Love on Top', artist: b})",
    "CREATE (w:WritingAward {awardedTo: b, category: 'Cover Story'})",
    "CREATE (p:Performance {artist: b, date: 'Late 2011', venue: 'New York's Roseland Ballroom'})"
  ],
  [
    "CREATE (b:Person {name: \"Beyonc\u00e9\", birthDate: \"January 7, 2012\"})",
    "CREATE (bi:Person {name: \"Blue Ivy Carter\"})",
    "CREATE (lh:Organization {name: \"Lenox Hill Hospital\"})",
    "CREATE (ra:Organization {name: \"Revel Atlantic City\"})",
    "CREATE (oh:Location {name: \"Ovation Hall\"})",
    "CREATE Relationship (b)-[:MOTHER_OF]->(bi)",
    "CREATE Relationship (b)-[:PERFORMED_AT]->(oh)"
  ],
  [
    "CREATE (artist:Artist {name: 'Destiny''s Child'})",
    "CREATE (album:Album {name: 'Love Songs'})",
    "CREATE (location:Location {city: 'Washington, D.C.'})",
    "CREATE (event:Event {name: 'President Obama''s second inauguration'})",
    "CREATE (song:Song {title: 'Love Songs'})",
    "MATCH (artist)",
    "MATCH (album)",
    "MATCH (location)",
    "MATCH (event)",
    "MATCH (song)",
    "CREATE Relationship (artist)-[:Performed]->(event)",
    "CREATE Relationship (album)-[:Released]->(song)",
    "CREATE Relationship (song)-[:Won]->(artist)",
    "CREATE Relationship (artist)-[:Featured]->(LifeIsButADream)",
    "CREATE Relationship (artist)-[:Signed]->(WarnerChappellMusic)"
  ],
  [
    "CREATE (b:Person {name: 'Beyonc\u00e9'})",
    "CREATE (t:Event {name: 'The Mrs. Carter Show World Tour'})",
    "CREATE (l:Location {name: 'Belgrade'})",
    "CREATE (d:Date {month: 'March 2014'})",
    "CREATE (a:Artist {name: 'Amy Winehouse'})",
    "CREATE (sa:Album {name: 'The Great Gatsby soundtrack'})",
    "CREATE (c:Collaborator {name: 'Andr\u00e9 3000'})",
    "CREATE (h:Event {name: '2013 Met Gala'})",
    "CREATE (q:Character {name: 'Queen Tara'})",
    "CREATE (f:Film {name: 'Epic'})",
    "CREATE (s:Studio {name: '20th Century Fox'})",
    "CONNECT (b) TO (t)",
    "CONNECT (t) TO (l)",
    "CONNECT (t) TO (d)",
    "CONNECT (a) TO (sa)",
    "CONNECT (b) TO (c)",
    "CONNECT (b) TO (h)",
    "CONNECT (b) TO (q)",
    "CONNECT (f) TO (s)"
  ],
  [
    "CREATE (b:Celebrity {name: \"Beyonc\u00e9\", age: 38, nationality: \"American\", careerAchievements: [\"Won 22 Grammy Awards\"], awardsWon: [\"Video Vanguard Award\"]})",
    "CREATE (a:MusicAlbum {title: \"Beyonc\u00e9\", releaseDate: \"13 Dec 2013\", genre: \"Electro-R&B\", salesFigures: 1 million, criticalReception: \"Critical acclaim\"})",
    "CREATE (b)<-[:OWNS]-(a)",
    "CREATE (a)<-[:DEBUTED_AT_TOP]-(c:Chart {name: \"Billboard 200 chart\", rank: 1, weeksAtTop: 10})",
    "CREATE (a)<-[:HAS_NUMBER_ONE_ALBUM]-(n:NumberOneAlbum {numberOfConsecutiveNumberOneAlbums: 5, significance: \"Record-breaking achievement\"})",
    "CREATE (a)<-[:MUSICALLY_RELATED_TO]-(e:Genre {name: \"Electro-R&B\"})",
    "CREATE (s:MusicTrack {title: \"Drunk in Love\", peakPosition: 2, salesFigures: 1 million})",
    "CREATE (a)<-[:HAS_SINGLE]-(s)",
    "CREATE (t:Tour {name: \"On the Run Tour\", dates: [\"24 Aug 2014\"], locations: [\"Various\"]})",
    "CREATE (b)<-[:PERFORMED_ON]-(t)",
    "CREATE (v:Award {name: \"Video Vanguard Award\", significance: \"Significant contribution to the industry\"})",
    "CREATE (b)<-[:WON]-(v)",
    "CREATE (f:Company {name: \"Forbes\", netWorth: 500 million, earnings: 115 million})",
    "CREATE (b)<-[:EARNS]-(f)"
  ],
  [
    "CREATE (b:Person {name: 'Beyonce'})",
    "CREATE (ga:Event {name: 'Grammy Awards'})",
    "CREATE (ao:AwardCategory {name: 'Album of the Year'})",
    "CREATE (brp:AwardCategory {name: 'Best R&B Performance'})",
    "CREATE (brs:AwardCategory {name: 'Best R&B Song'})",
    "CREATE (bss:AwardCategory {name: 'Best Surround Sound Album'})",
    "CREATE (vm:Publication {name: 'Vogue magazine'})",
    "CREATE (miaf:Event {name: 'Made in America festival'})",
    "CREATE (gcf:Event {name: 'Global Citizen Festival'})",
    "CREATE (c:Band {name: 'Coldplay'})",
    "CREATE (ahfd:Album {name: 'A Head Full of Dreams (2015)'})",
    "CONNECT (b) TO (ga) WITH 'Nominated for Album of the Year'",
    "CONNECT (b) TO (brp) WITH 'Won Best R&B Performance'",
    "CONNECT (b) TO (bss) WITH 'Won Best Surround Sound Album'",
    "CONNECT (b) TO (vm) WITH 'Cover star'",
    "CONNECT (b) TO (miaf) WITH 'Headlined'",
    "CONNECT (b) TO (gcf) WITH 'Headlined'",
    "CONNECT (c) TO (ahfd) WITH 'Featured artist on track 'Hymn for the Weekend'\""
  ]
]